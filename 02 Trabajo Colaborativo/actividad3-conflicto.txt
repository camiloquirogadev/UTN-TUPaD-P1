📌 Trabajo Práctico 2 – Parte 3: Resolución de conflictos en Git

Estudiante: Camilo Quiroga  
Materia: Programación 1  
Repositorio: https://github.com/camiloquirogadev/UTN-TUPaD-P1  
Rama principal: main  
Rama secundaria: feature-branch  

✅ Descripción de la actividad:
Se simuló un conflicto de fusión (merge conflict) entre dos ramas que editaron el mismo archivo (`README.md`) en líneas coincidentes.

🔧 Pasos realizados:

1. Se creó la rama `feature-branch` a partir de `main`.
2. En `feature-branch`, se editó el archivo `README.md` y se agregó la línea:
   → “Este es un cambio en la feature branch.”
3. Se hizo commit y push de la rama.
4. Luego, se volvió a `main`, se editó el mismo archivo agregando:
   → “Este es un cambio en la main branch.”
5. Al intentar hacer `git merge feature-branch` desde `main`, se generó un conflicto.
6. El archivo `README.md` mostraba ambos bloques en conflicto, delimitados con `<<<<<<<`, `=======` y `>>>>>>>`.
7. El conflicto fue resuelto manualmente editando el archivo y dejando el siguiente texto:
   → “Este es un cambio combinado de ambas ramas para el TP.”
8. Se guardó, agregó y commiteó el archivo resuelto.
9. Finalmente, se realizó el `push` a la rama `main`.

📌 Resultado:
El conflicto fue resuelto exitosamente y los cambios están reflejados correctamente en el repositorio.

🧾 Confirmación:
Los commits, ramas y el historial del conflicto se pueden verificar en:
👉 https://github.com/camiloquirogadev/UTN-TUPaD-P1
